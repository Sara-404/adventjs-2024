/*
Santa Claus tiene una agenda m치gica 游늲 donde guarda las direcciones de los ni침os para entregar los regalos. El problema: la informaci칩n de la agenda est치 mezclada y malformateada. Las l칤neas contienen un n칰mero de tel칠fono m치gico, el nombre de un ni침o y su direcci칩n, pero todo est치 rodeado de caracteres extra침os.

Santa necesita tu ayuda para encontrar informaci칩n espec칤fica de la agenda. Escribe una funci칩n que, dado el contenido de la agenda y un n칰mero de tel칠fono, devuelva el nombre del ni침o y su direcci칩n.

Ten en cuenta que en la agenda:

Los n칰meros de tel칠fono est치n formateados como +X-YYY-YYY-YYY (donde X es uno o dos d칤gitos, e Y es un d칤gito).
El nombre de cada ni침o est치 siempre entre < y >
La idea es que escribas una funci칩na que, pas치ndole el tel칠fono completo o una parte, devuelva el nombre y direcci칩n del ni침o. Si no encuentra nada o hay m치s de un resultado, debes devolver null.
*/

const agenda = `+34-600-123-456 Calle Gran Via 12 <Juan Perez>
Plaza Mayor 45 Madrid 28013 <Maria Gomez> +34-600-987-654
<Carlos Ruiz> +1-800-555-0199 Fifth Ave New York`

console.log(findInAgenda(agenda, '34-600-123-456'))
// { name: "Juan Perez", address: "Calle Gran Via 12" }

console.log(findInAgenda(agenda, '600-987'))
// { name: "Maria Gomez", address: "Plaza Mayor 45 Madrid 28013" }

console.log(findInAgenda(agenda, '111'))
// null
// Explicaci칩n: No hay resultados

console.log(findInAgenda(agenda, '1'))
// null
// Explicaci칩n: Demasiados resultados


/**
 * @param {string} agenda
 * @param {string} phone
 * @returns {{ name: string, address: string } | null}
 */
function findInAgenda(agenda, phone) {
    
    //expresiones regulares
    const regtlf = /\+\d{1,2}-\d{3}-\d{3}-\d{3,}/gi
    const regName = /<.*>/gi
    
    const numeros = agenda.match(regtlf)

    //si hay m치s de un tel칠fono que coincide, devuelve null
    if(numeros.filter(num => num.includes(phone)).length !== 1) return null

    const numeroBuscado = numeros.find(num => num.includes(phone))

    //buscamos el contacto que contenga ese n칰mero
    const contacto = agenda.split('\n').find(array => array.includes(numeroBuscado))

    let persona = new Object()

    //a침adimos los datos a persona
    const nombre = contacto.match(regName).toString()
    persona.name = nombre.replaceAll('<', '').replaceAll('>', '')
    const adresss = contacto.replace(nombre, '').replace(numeroBuscado, '').trim()
    persona.address = adresss
        
    return persona
}


/**
 * @param {string} agenda
 * @param {string} phone
 * @returns {{ name: string, address: string } | null}
 */
// function findInAgenda(agenda, phone) {
    
//     //! 4 estrellas

//     //si no est치 phone en agenda, devuelve null
//     if(!agenda.includes(phone)) return null

//     //expresiones regulares
//     const regtlf = /\+\d{1,2}-\d{3}-\d{3}-\d{3,}/gi
//     const regName = /<.*>/gi
    
//     const numeros = agenda.match(regtlf)

//     //si hay m치s de un tel칠fono que coincide, devuelve null
//     if(numeros.filter(num => num.includes(phone)).length !== 1) return null

//     const numeroBuscado = numeros.find(num => num.includes(phone))

//     const contactos = agenda.split('\n')

//     let persona = new Object()

//     for(const contacto of contactos){
//         if(contacto.includes(numeroBuscado)){
//             const nombre = contacto.match(regName).toString()
//             persona.name = nombre.replaceAll('<', '').replaceAll('>', '')
//             const adresss = contacto.replace(nombre, '').replace(numeroBuscado, '').trim()
//             persona.address = adresss
//         }
//     }
    
//     return persona
// }