/*
Los elfos est치n trabajando en un sistema para verificar las listas de regalos de los ni침os 游녾游녽. Sin embargo, 춰algunas listas est치n incompletas y faltan n칰meros!

Tu tarea es escribir una funci칩n que, dado un array de n칰meros, encuentre todos los n칰meros que faltan entre 1 y n (donde n es el tama침o del array o el n칰mero m치s alto del array).

Eso s칤, ten en cuenta que:

Los n칰meros pueden aparecer m치s de una vez y otros pueden faltar
El array siempre contiene n칰meros enteros positivos
Siempre se empieza a contar desde el 1
*/

console.log(findMissingNumbers([1, 2, 4, 6]))
// [3, 5]

console.log(findMissingNumbers([4, 8, 7, 2]))
// [1, 3, 5, 6]

console.log(findMissingNumbers([3, 2, 1, 1]))
// []

console.log(findMissingNumbers([5, 5, 5, 3, 3, 2, 1]))
// [4]

/**
 * @param {number[]} nums - List of integers.
 * @returns {number[]} - List of missing numbers.
 */
function findMissingNumbers(nums) {
    
    let result = []

    //creo un array que es todos los n칰meros desde el 1 hasta el m치ximo de nums
    for(let i = 1; i < Math.max(...nums); i++){
        result.push(i)
    }
    
    //devuelvo el array eliminando los elementos que est치n en nums
    return result.filter((value) => !nums.includes(value))
    
}

/**
 * @param {number[]} nums - List of integers.
 * @returns {number[]} - List of missing numbers.
 */
function findMissingNumbers(nums) {
    
    //! 4 estrellas
    // //ordeno el array y elimino duplicados convirti칠ndolo a set y de nuevo a array
    // nums = Array.from(new Set(nums)).sort((a,b) => a - b)
    
    // let result = [] 

    // //bucle hasta el n칰mero m치s alto (que ser치 el 칰ltimo al haberlo ordenado)
    // for(let i = 1; i< nums[nums.length - 1]; i++){
    //     //si el n칰mero no est치 en nums, lo a침ade a result
    //     if(!nums.includes(i)){
    //         result.push(i)
    //     }
    // }

    // return result
}